LET'S BUILD PYTHON SCRIPTS!
General Requirements:
- All your files will be interpreted/compiled on Ubuntu 14.04 LTS using python3 (version 3.4.3)
- All your files should end with a new line
- The first line of all your files should be exactly #!/usr/bin/python3
- Libraries imported in your Python files must be organized in alphabetical order
- Your code should use the PEP 8 style
- The length of your files will be tested using wc
- All your modules should have a documentation (python3 -c 'print(__import__("my_module").__doc__)')
- You must use get to access to dictionary value by key (it won’t throw an exception if the key doesn’t exist in the dictionary)
- Your code should not be executed when imported (by using if __name__ == "__main__":)
- Use fstring where possible
- Adhere to snake_case naming style

Task 0: Write a Python script that, using this REST API, for a given employee ID, returns information about his/her TODO list progress.
Task 0 Requirements:
- You must use urllib or requests module
- The script must accept an integer as a parameter, which is the employee ID
- The script must display on the standard output the employee TODO list progress in this exact format: 
	- First line: Employee EMPLOYEE_NAME is done with tasks(NUMBER_OF_DONE_TASKS/TOTAL_NUMBER_OF_TASKS):
		- EMPLOYEE_NAME: name of the employee
		- NUMBER_OF_DONE_TASKS: number of completed tasks
		- TOTAL_NUMBER_OF_TASKS: total number of tasks, which is the sum of completed and non-completed tasks
	- Second and N next lines display the title of completed tasks: TASK_TITLE (with 1 tabulation and 1 space before the TASK_TITLE)
	
	
Task 1: Using what you did in the task #0, extend your Python script to export data in the CSV format.
Task 1 Requirements:
	- Records all tasks that are owned by this employee
	- Format must be: "USER_ID","USERNAME","TASK_COMPLETED_STATUS","TASK_TITLE"
	- File name must be: USER_ID.csv


Task 2: Using what you did in the task #0, extend your Python script to export data in the JSON format.
Task 2 requiremnts:
	- Records all tasks that are owned by this employee
	- Format must be: { "USER_ID": [{"task": "TASK_TITLE", "completed": TASK_COMPLETED_STATUS, "username": "USERNAME"}, {"task": "TASK_TITLE", "completed": TASK_COMPLETED_STATUS, "username": "USERNAME"}, ... ]}
	- File name must be: USER_ID.json
	

Task 3: Using what you did in the task #0, extend your Python script to export data in the JSON format.
Task 3 requirements:
	- Records all tasks from all employees
	- Format must be: { "USER_ID": [ {"username": "USERNAME", "task": "TASK_TITLE", "completed": TASK_COMPLETED_STATUS}, {"username": "USERNAME", "task": "TASK_TITLE", "completed": TASK_COMPLETED_STATUS}, ... ], "USER_ID": [ {"username": "USERNAME", "task": "TASK_TITLE", "completed": TASK_COMPLETED_STATUS}, {"username": "USERNAME", "task": "TASK_TITLE", "completed": TASK_COMPLETED_STATUS}, ... ]}
	- File name must be: todo_all_employees.json